{"version":3,"sources":["assets/json sync /^/.//.*/.en/.json$","redux/UiReducer.js","redux/RootReducer.js","redux/Store.js","components/ui/Slider.js","components/ui/TabPanel.js","components/ui/AutoCompleteInput.js","components/ui/CodeCard.js","components/ui/DetailsCard.js","components/ds/Details.js","components/ui/TabList.js","components/ui/Layout.js","components/App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","TOGGLE_DARK_MODE","TOGGLE_TAB_INDEX","initialState","prefersDarkMode","tabIndex","tabs","name","value","colors","pink","green","rootReducer","combineReducers","ui","state","action","type","middleware","applyMiddleware","thunkMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Store","createStore","RootReducer","undefined","useStyles","makeStyles","theme","root","borderRight","palette","divider","TabsList","classes","useSelector","dispatch","useDispatch","useTheme","matches","useMediaQuery","breakpoints","down","Grid","item","md","lg","Tabs","orientation","variant","onChange","_","aria-label","index","Tab","label","marginLeft","TabPanel","props","children","other","Box","role","hidden","aria-labelledby","className","mx","marginTop","AutoCompleteInput","React","memo","options","changeValue","Autocomplete","getOptionLabel","option","selectOnFocus","val","getOptionSelected","renderInput","params","TextField","title","color","CodeDetailsCard","data","defaultCode","xs","Card","elevation","CardContent","Typography","component","gutterBottom","dangerouslySetInnerHTML","__html","example","output","marginBottom","main","url","desc","Divider","CodeCard","CardActions","Link","href","target","rel","Details","toLowerCase","idSub","useState","valueTopLevel","changeValueTopLevel","valueSubLevel","changeValueSubLevel","require","container","spacing","specialNote","Alert","severity","AlertTitle","dropdownLabel","htmlFor","entries","length","DetailsCard","baseUrl","TabList","backgroundColor","background","paper","paddingTop","paddingBottom","Layout","Container","maxWidth","my","Slider","App","changeColor","a","useMemo","createMuiTheme","ThemeProvider","CssBaseline","Fab","onClick","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","store","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.bd006a5e.chunk.js","sourcesContent":["var map = {\n\t\"./array.en.json\": 111,\n\t\"./object.en.json\": 112,\n\t\"./string.en.json\": 113\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 110;","export const TOGGLE_DARK_MODE = \"ui/prefersDarkMode\"\nexport const TOGGLE_TAB_INDEX = \"ui/tabIndex\"\n\nconst initialState = {\n  prefersDarkMode: false,\n  tabIndex: 0,\n  tabs: [\n    { name: \"Strings\", value: 0 },\n    { name: \"Arrays\", value: 1 },\n    { name: \"Objects\", value: 2 },\n  ],\n  colors: { pink: \"#FEB3B3\", green: \"#B0EA68\" },\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_DARK_MODE: {\n      return {\n        ...state,\n        prefersDarkMode: !state.prefersDarkMode,\n      }\n    }\n\n    case TOGGLE_TAB_INDEX: {\n      return {\n        ...state,\n        tabIndex: action.value,\n      }\n    }\n\n    default: {\n      return { ...state }\n    }\n  }\n}\n\nexport const changeDarkMode = () => async (dispatch) => {\n  dispatch({ type: TOGGLE_DARK_MODE })\n}\n","import { combineReducers } from \"redux\"\nimport ui from \"./UiReducer\"\n\nconst rootReducer = combineReducers({\n  ui,\n})\n\nexport default rootReducer\n","/* eslint-disable no-underscore-dangle */\nimport { createStore, applyMiddleware, compose } from \"redux\"\nimport thunkMiddleware from \"redux-thunk\"\nimport RootReducer from \"./RootReducer\"\n\nconst middleware = applyMiddleware(thunkMiddleware)\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst Store = createStore(\n  RootReducer,\n  undefined,\n  /* preloadedState, */ composeEnhancers(middleware)\n)\n\nexport default Store\n","import React from \"react\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Grid from \"@material-ui/core/Grid\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Tab from \"@material-ui/core/Tab\"\nimport { TOGGLE_TAB_INDEX } from \"../../redux/UiReducer\"\nimport { useTheme } from \"@material-ui/core/styles\"\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\"\n\nconst a11yProps = (index) => ({\n  id: `vertical-tab-${index}`,\n  \"aria-controls\": `vertical-tabpanel-${index}`,\n})\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n}))\n\nconst TabsList = () => {\n  const classes = useStyles()\n  const { tabIndex, tabs } = useSelector((state) => state.ui)\n  const dispatch = useDispatch()\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"))\n\n  const handleChange = (_, value) => dispatch({ type: TOGGLE_TAB_INDEX, value })\n\n  return (\n    <Grid item md={12} lg={2}>\n      <Tabs\n        orientation={matches ? \"horizontal\" : \"vertical\"}\n        variant=\"scrollable\"\n        value={tabIndex}\n        onChange={handleChange}\n        aria-label=\"categories-tab\"\n        classes={{ ...classes }}\n      >\n        {tabs.map(({ name, value }) => (\n          <Tab label={name} key={value} {...a11yProps(value)} />\n        ))}\n      </Tabs>\n    </Grid>\n  )\n}\n\nexport default TabsList\n","import React from 'react'\nimport Box from '@material-ui/core/Box'\nimport { makeStyles } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    marginLeft: 30\n  }\n}))\n\nconst TabPanel = (props) => {\n  const classes = useStyles()\n  const { children, value, index, ...other } = props\n\n  return (\n    <Box\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`tabpanel-${ index }`}\n      aria-labelledby={`tab-${ index }`}\n      className={classes.root}\n      mx={2}\n      {...other}\n    >\n      {value === index && (children)}\n    </Box>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node.isRequired,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n}\n\nexport default TabPanel\n","import React from \"react\"\nimport Autocomplete from \"@material-ui/lab/Autocomplete\"\nimport TextField from \"@material-ui/core/TextField\"\nimport PropTypes from \"prop-types\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    marginTop: 10,\n  },\n}))\n\nconst AutoCompleteInput = React.memo(\n  ({ id, options, changeValue, label = 0 }) => {\n    const classes = useStyles()\n\n    return (\n      <Autocomplete\n        id={id}\n        className={classes.root}\n        options={options}\n        getOptionLabel={(option) => option[label]}\n        selectOnFocus\n        onChange={(_, val) => changeValue(val)}\n        getOptionSelected={(option, val) =>\n          option[label] === val[label] || null\n        }\n        renderInput={(params) => (\n          <TextField {...params} label=\"Choose operation\" variant=\"outlined\" />\n        )}\n      />\n    )\n  }\n)\n\nAutoCompleteInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  changeValue: PropTypes.func.isRequired,\n  label: PropTypes.any,\n}\n\nexport default AutoCompleteInput\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport PropTypes from \"prop-types\"\n\nconst useStyles = makeStyles({\n  title: {\n    color: \"#f50057\",\n  },\n})\n\nconst CodeDetailsCard = React.memo(({ data, defaultCode }) => {\n  const classes = useStyles()\n\n  return (\n    <Grid item xs={12}>\n      <Card variant=\"outlined\" elevation={3}>\n        <CardContent>\n          <Typography\n            variant=\"h5\"\n            component=\"h3\"\n            gutterBottom\n            className={classes.title}\n          >\n            Usage\n          </Typography>\n          <Box className=\"usage-code usage1\">\n            <Typography\n              variant=\"body1\"\n              component=\"span\"\n              dangerouslySetInnerHTML={{ __html: defaultCode }}\n            ></Typography>\n            <br />\n            <br />\n            <Typography\n              variant=\"body1\"\n              component=\"span\"\n              className=\"exampleoutput\"\n              dangerouslySetInnerHTML={{ __html: data.example }}\n            ></Typography>\n          </Box>\n          <Box className=\"usage2\">\n            <Typography\n              variant=\"h5\"\n              component=\"h3\"\n              gutterBottom\n              className={classes.title}\n            >\n              Output\n            </Typography>\n            <Box className=\"usage-code\">\n              <Typography\n                variant=\"body1\"\n                component=\"span\"\n                className=\"exampleoutput2\"\n                dangerouslySetInnerHTML={{ __html: data.output }}\n              ></Typography>\n            </Box>\n          </Box>\n        </CardContent>\n      </Card>\n    </Grid>\n  )\n})\n\nCodeDetailsCard.propTypes = {\n  data: PropTypes.object.isRequired,\n  defaultCode: PropTypes.string.isRequired,\n}\n\nexport default CodeDetailsCard\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Divider from \"@material-ui/core/Divider\"\nimport Card from \"@material-ui/core/Card\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Link from \"@material-ui/core/Link\"\nimport PropTypes from \"prop-types\"\nimport CodeCard from \"./CodeCard\"\nimport LaunchIcon from \"@material-ui/icons/Launch\"\n\nconst useStyles = makeStyles({\n  title: {\n    color: \"#f50057\",\n  },\n  divider: {\n    marginTop: 20,\n    marginBottom: 20,\n  },\n})\n\nconst CodeDetailsCard = React.memo(({ main, data, url, defaultCode }) => {\n  const classes = useStyles()\n\n  return (\n    <Grid item xs={12}>\n      <Card variant=\"outlined\" elevation={3}>\n        <CardContent>\n          <Typography\n            variant=\"h4\"\n            component=\"h2\"\n            gutterBottom\n            className={classes.title}\n          >\n            {main}.{data.name}()\n          </Typography>\n          <Typography\n            dangerouslySetInnerHTML={{ __html: data.desc }}\n          ></Typography>\n          <Divider className={classes.divider} />\n          <CodeCard data={data} defaultCode={defaultCode} />\n        </CardContent>\n        <CardActions>\n          <Link variant=\"h5\" href={url} target=\"_blank\" rel=\"noreferrer\">\n            See the docs <LaunchIcon />\n          </Link>\n        </CardActions>\n      </Card>\n    </Grid>\n  )\n})\n\nCodeDetailsCard.propTypes = {\n  data: PropTypes.object.isRequired,\n  main: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  defaultCode: PropTypes.string.isRequired,\n}\n\nexport default CodeDetailsCard\n","import React, { useState } from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Alert from \"@material-ui/lab/Alert\"\nimport AlertTitle from \"@material-ui/lab/AlertTitle\"\nimport Typography from \"@material-ui/core/Typography\"\nimport PropTypes from \"prop-types\"\nimport AutoCompleteInput from \"../ui/AutoCompleteInput\"\nimport DetailsCard from \"../ui/DetailsCard\"\n\nconst Details = ({ label }) => {\n  const id = `input-${label.toLowerCase()}`\n  const idSub = `${id}-sub-option`\n  const [valueTopLevel, changeValueTopLevel] = useState()\n  const [valueSubLevel, changeValueSubLevel] = useState()\n  const data = require(`../../assets/json/${label.toLowerCase()}.en.json`)\n\n  const change = (val) => {\n    changeValueSubLevel()\n    changeValueTopLevel(val)\n  }\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"h2\">{label} Explorer</Typography>\n        <Typography variant=\"subtitle1\">\n          Find the {label.toLowerCase()} method you need without digging through\n          the docs\n        </Typography>\n      </Grid>\n      {data.specialNote && (\n        <Grid item xs={12}>\n          <Alert severity=\"info\">\n            <AlertTitle>Info</AlertTitle>\n            <Typography\n              dangerouslySetInnerHTML={{ __html: data.specialNote }}\n            ></Typography>\n          </Alert>\n        </Grid>\n      )}\n      {data.dropdownLabel && (\n        <Grid item xs={12}>\n          <label htmlFor={id}>\n            <Typography variant=\"body1\">{data.dropdownLabel}</Typography>\n          </label>\n        </Grid>\n      )}\n      {data.options && (\n        <Grid item xs={12}>\n          <AutoCompleteInput\n            id={id}\n            options={Object.entries(data.options)}\n            changeValue={change}\n          />\n        </Grid>\n      )}\n      {valueTopLevel && valueTopLevel.length && (\n        <>\n          <Grid item xs={12}>\n            <label htmlFor={idSub}>\n              <Typography variant=\"body1\">\n                {valueTopLevel[1].dropdownLabel}\n              </Typography>\n            </label>\n          </Grid>\n          <Grid item xs={12}>\n            <AutoCompleteInput\n              id={idSub}\n              options={valueTopLevel[1].options}\n              changeValue={changeValueSubLevel}\n              label=\"shortDesc\"\n            />\n          </Grid>\n        </>\n      )}\n      {valueSubLevel && Object.keys(valueSubLevel).length && (\n        <DetailsCard\n          main={label}\n          url={`${data.baseUrl}${valueSubLevel.name}`}\n          data={valueSubLevel}\n          defaultCode={data.defaultCode}\n        />\n      )}\n    </Grid>\n  )\n}\n\nDetails.propTypes = {\n  label: PropTypes.string.isRequired,\n}\n\nexport default Details\n","import React from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\nimport { useSelector } from \"react-redux\"\nimport TabPanel from \"./TabPanel\"\nimport Details from \"../ds/Details\"\n\nconst TabList = () => {\n  const { tabIndex } = useSelector((state) => state.ui)\n\n  return (\n    <Grid item md={12} lg={10}>\n      <TabPanel index={0} value={tabIndex}>\n        <Details label=\"String\" />\n      </TabPanel>\n      <TabPanel index={1} value={tabIndex}>\n        <Details label=\"Array\" />\n      </TabPanel>\n      <TabPanel index={2} value={tabIndex}>\n        <Details label=\"Object\" />\n      </TabPanel>\n    </Grid>\n  )\n}\n\nexport default TabList\n","import React from \"react\"\nimport Container from \"@material-ui/core/Container\"\nimport Grid from \"@material-ui/core/Grid\"\nimport { makeStyles } from \"@material-ui/core\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Slider from \"./Slider\"\nimport TabList from \"./TabList\"\nimport { useTheme } from \"@material-ui/core/styles\"\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    paddingTop: 10,\n    paddingBottom: 30,\n  },\n}))\n\nconst Layout = () => {\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"))\n  const classes = useStyles()\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Typography variant=\"h1\" className={matches ? \"responsive-h1\" : \"\"}>\n        <span>{matches ? \"JS\" : \"JavaScript\"}</span> Explorer\n      </Typography>\n      <Grid container my={4} className={classes.root}>\n        <Slider />\n        <TabList />\n      </Grid>\n    </Container>\n  )\n}\n\nexport default Layout\n","/* eslint-disable react/style-prop-object */\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport React, { useMemo } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\"\nimport Fab from \"@material-ui/core/Fab\"\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\"\nimport NightsStayIcon from \"@material-ui/icons/NightsStay\"\nimport Layout from \"./ui/Layout\"\nimport { changeDarkMode } from \"../redux/UiReducer\"\n\nconst App = () => {\n  const { prefersDarkMode } = useSelector((state) => state.ui)\n  const dispatch = useDispatch()\n\n  const changeColor = () => dispatch(changeDarkMode())\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n        },\n      }),\n    [prefersDarkMode]\n  )\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Layout />\n      <Fab\n        aria-label=\"theme-change\"\n        className=\"theme-switcher-fab\"\n        onClick={() => changeColor()}\n      >\n        {prefersDarkMode ? <WbSunnyIcon /> : <NightsStayIcon />}\n      </Fab>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${ process.env.PUBLIC_URL }/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://cra.link/PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://cra.link/PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport { render } from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport Store from \"./redux/Store\"\nimport \"./index.css\"\nimport App from \"./components/App\"\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nrender(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorkerRegistration.register()\nreportWebVitals(console.log)\n"],"sourceRoot":""}