{"version":3,"sources":["redux/UiReducer.js","redux/RootReducer.js","utils/localStorage.js","redux/Store.js","components/ui/Slider.js","components/ui/TabPanel.js","components/ui/AutoCompleteInput.js","components/ui/CodeCard.js","components/ui/DetailsCard.js","components/ds/Arrays.js","components/ds/Objects.js","components/ds/Strings.js","components/ui/DataStructuresTab.js","components/ui/Layout.js","components/App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["TOGGLE_DARK_MODE","TOGGLE_TAB_INDEX","initialState","prefersDarkMode","tabIndex","tabs","name","value","colors","pink","green","rootReducer","combineReducers","ui","state","action","type","errorHandler","err","console","error","persistedState","serializedState","localStorage","getItem","JSON","parse","loadState","middleware","applyMiddleware","thunkMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Store","createStore","RootReducer","subscribe","throttle","stringify","setItem","saveState","getState","useStyles","makeStyles","theme","root","borderRight","palette","divider","TabsList","classes","useSelector","dispatch","useDispatch","useTheme","matches","useMediaQuery","breakpoints","down","Grid","item","md","lg","Tabs","orientation","variant","onChange","_","aria-label","map","index","Tab","label","id","marginLeft","TabPanel","props","children","other","Box","role","hidden","aria-labelledby","className","mx","marginTop","AutoCompleteInput","React","memo","options","changeValue","Autocomplete","getOptionLabel","option","selectOnFocus","val","getOptionSelected","renderInput","params","TextField","title","color","CodeDetailsCard","data","defaultCode","xs","Card","elevation","CardContent","Typography","component","gutterBottom","dangerouslySetInnerHTML","__html","example","output","marginBottom","main","url","desc","Divider","CodeCard","CardActions","Link","href","target","rel","idSub","dropdownLabel","Object","freeze","shortDesc","Arrays","useState","valueTopLevel","changeValueTopLevel","valueSubLevel","changeValueSubLevel","container","spacing","htmlFor","entries","length","keys","DetailsCard","Objects","Strings","DataStructuresTab","backgroundColor","background","paper","paddingTop","paddingBottom","fab","position","bottom","right","Layout","changeColor","a","Container","maxWidth","my","Slider","Fab","onClick","App","useMemo","createMuiTheme","ThemeProvider","CssBaseline","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","store","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.675df913.chunk.js","sourcesContent":["export const TOGGLE_DARK_MODE = \"ui/prefersDarkMode\"\nexport const TOGGLE_TAB_INDEX = \"ui/tabIndex\"\n\nconst initialState = {\n  prefersDarkMode: false,\n  tabIndex: 0,\n  tabs: [\n    { name: \"Arrays\", value: 0 },\n    // { name: \"Objects\", value: 1 },\n    // { name: \"Strings\", value: 2 },\n  ],\n  colors: { pink: \"#FEB3B3\", green: \"#B0EA68\" },\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_DARK_MODE: {\n      return {\n        ...state,\n        prefersDarkMode: !state.prefersDarkMode,\n      }\n    }\n\n    case TOGGLE_TAB_INDEX: {\n      return {\n        ...state,\n        tabIndex: action.value,\n      }\n    }\n\n    default: {\n      return { ...state }\n    }\n  }\n}\n\nexport const changeDarkMode = () => async (dispatch) => {\n  dispatch({ type: TOGGLE_DARK_MODE })\n}\n","import { combineReducers } from \"redux\"\nimport ui from \"./UiReducer\"\n\nconst rootReducer = combineReducers({\n  ui,\n})\n\nexport default rootReducer\n","\n// TODO: Better error handling\nconst errorHandler = (err) => console.error(err)\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state')\n    if (serializedState === null) {\n      return undefined\n    }\n    return JSON.parse(serializedState)\n  } catch (err) {\n    return errorHandler(err)\n  }\n}\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    return localStorage.setItem('state', serializedState)\n  } catch (err) {\n    return errorHandler(err)\n  }\n}\n\n","/* eslint-disable no-underscore-dangle */\nimport { createStore, applyMiddleware, compose } from \"redux\"\nimport thunkMiddleware from \"redux-thunk\"\nimport throttle from 'lodash.throttle'\nimport RootReducer from \"./RootReducer\"\nimport { loadState, saveState } from '../utils/localStorage'\n\nconst persistedState = loadState()\nconst middleware = applyMiddleware(thunkMiddleware)\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst Store = createStore(RootReducer, persistedState, /* preloadedState, */ composeEnhancers(middleware))\n\nStore.subscribe(throttle(() => {\n  saveState({\n    ui: Store.getState().ui\n  })\n}, 1000))\n\nexport default Store\n","import React from \"react\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Grid from \"@material-ui/core/Grid\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Tab from \"@material-ui/core/Tab\"\nimport { TOGGLE_TAB_INDEX } from \"../../redux/UiReducer\"\nimport { useTheme } from \"@material-ui/core/styles\"\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\"\n\nconst a11yProps = (index) => ({\n  id: `vertical-tab-${index}`,\n  \"aria-controls\": `vertical-tabpanel-${index}`,\n})\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n}))\n\nconst TabsList = () => {\n  const classes = useStyles()\n  const { tabIndex, tabs } = useSelector((state) => state.ui)\n  const dispatch = useDispatch()\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"))\n\n  const handleChange = (_, value) => dispatch({ type: TOGGLE_TAB_INDEX, value })\n\n  return (\n    <Grid item md={12} lg={2}>\n      <Tabs\n        orientation={matches ? \"horizontal\" : \"vertical\"}\n        variant=\"scrollable\"\n        value={tabIndex}\n        onChange={handleChange}\n        aria-label=\"categories-tab\"\n        classes={{ ...classes }}\n      >\n        {tabs.map(({ name, value }) => (\n          <Tab label={name} key={value} {...a11yProps(value)} />\n        ))}\n      </Tabs>\n    </Grid>\n  )\n}\n\nexport default TabsList\n","import React from 'react'\nimport Box from '@material-ui/core/Box'\nimport { makeStyles } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    marginLeft: 30\n  }\n}))\n\nconst TabPanel = (props) => {\n  const classes = useStyles()\n  const { children, value, index, ...other } = props\n\n  return (\n    <Box\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`tabpanel-${ index }`}\n      aria-labelledby={`tab-${ index }`}\n      className={classes.root}\n      mx={2}\n      {...other}\n    >\n      {value === index && (children)}\n    </Box>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node.isRequired,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n}\n\nexport default TabPanel\n","import React from \"react\"\nimport Autocomplete from \"@material-ui/lab/Autocomplete\"\nimport TextField from \"@material-ui/core/TextField\"\nimport PropTypes from \"prop-types\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    marginTop: 10,\n  },\n}))\n\nconst AutoCompleteInput = React.memo(\n  ({ id, options, changeValue, label = 0 }) => {\n    const classes = useStyles()\n\n    return (\n      <Autocomplete\n        id={id}\n        className={classes.root}\n        options={options}\n        getOptionLabel={(option) => option[label]}\n        selectOnFocus\n        onChange={(_, val) => changeValue(val)}\n        getOptionSelected={(option, val) => option[label] === val[label]}\n        renderInput={(params) => (\n          <TextField {...params} label=\"Choose operation\" variant=\"outlined\" />\n        )}\n      />\n    )\n  }\n)\n\nAutoCompleteInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  changeValue: PropTypes.func.isRequired,\n  label: PropTypes.any,\n}\n\nexport default AutoCompleteInput\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport PropTypes from \"prop-types\"\n\nconst useStyles = makeStyles({\n  title: {\n    color: \"#f50057\",\n  },\n})\n\nconst CodeDetailsCard = React.memo(({ data, defaultCode }) => {\n  const classes = useStyles()\n\n  return (\n    <Grid item xs={12}>\n      <Card variant=\"outlined\" elevation={3}>\n        <CardContent>\n          <Typography\n            variant=\"h5\"\n            component=\"h3\"\n            gutterBottom\n            className={classes.title}\n          >\n            Usage\n          </Typography>\n          <Box className=\"usage-code usage1\">\n            <Typography variant=\"body1\" component=\"p\">\n              <Typography\n                variant=\"body1\"\n                component=\"p\"\n                dangerouslySetInnerHTML={{ __html: defaultCode }}\n              ></Typography>\n              <Typography\n                variant=\"body1\"\n                component=\"p\"\n                className=\"exampleoutput\"\n                dangerouslySetInnerHTML={{ __html: data.example }}\n              ></Typography>\n            </Typography>\n          </Box>\n          <Box className=\"usage2\">\n            <Typography\n              variant=\"h5\"\n              component=\"h3\"\n              gutterBottom\n              className={classes.title}\n            >\n              Output\n            </Typography>\n            <Box className=\"usage-code\">\n              <Typography variant=\"body1\" component=\"p\">\n                <Typography\n                  variant=\"body1\"\n                  component=\"span\"\n                  className=\"exampleoutput2\"\n                  dangerouslySetInnerHTML={{ __html: data.output }}\n                ></Typography>\n              </Typography>\n            </Box>\n          </Box>\n        </CardContent>\n      </Card>\n    </Grid>\n  )\n})\n\nCodeDetailsCard.propTypes = {\n  data: PropTypes.object.isRequired,\n  defaultCode: PropTypes.string.isRequired,\n}\n\nexport default CodeDetailsCard\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Divider from \"@material-ui/core/Divider\"\nimport Card from \"@material-ui/core/Card\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Link from \"@material-ui/core/Link\"\nimport PropTypes from \"prop-types\"\nimport CodeCard from \"./CodeCard\"\nimport LaunchIcon from \"@material-ui/icons/Launch\"\n\nconst useStyles = makeStyles({\n  title: {\n    color: \"#f50057\",\n  },\n  divider: {\n    marginTop: 20,\n    marginBottom: 20,\n  },\n})\n\nconst CodeDetailsCard = React.memo(({ main, data, url, defaultCode }) => {\n  const classes = useStyles()\n\n  return (\n    <Grid item xs={12}>\n      <Card variant=\"outlined\" elevation={3}>\n        <CardContent>\n          <Typography\n            variant=\"h4\"\n            component=\"h2\"\n            gutterBottom\n            className={classes.title}\n          >\n            {main}.{data.name}()\n          </Typography>\n          <Typography\n            dangerouslySetInnerHTML={{ __html: data.desc }}\n          ></Typography>\n          <Divider className={classes.divider} />\n          <CodeCard data={data} defaultCode={defaultCode} />\n        </CardContent>\n        <CardActions>\n          <Link variant=\"h5\" href={url} target=\"_blank\" rel=\"noreferrer\">\n            See the docs <LaunchIcon />\n          </Link>\n        </CardActions>\n      </Card>\n    </Grid>\n  )\n})\n\nCodeDetailsCard.propTypes = {\n  data: PropTypes.object.isRequired,\n  main: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  defaultCode: PropTypes.string.isRequired,\n}\n\nexport default CodeDetailsCard\n","import React, { useState } from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Typography from \"@material-ui/core/Typography\"\nimport AutoCompleteInput from \"../ui/AutoCompleteInput\"\nimport DetailsCard from \"../ui/DetailsCard\"\n\nconst id = `input-Array`\nconst idSub = `${id}-sub-option`\nconst baseUrl =\n  \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/\" // NOTE: attach name property of object to the end\nconst data = {\n  dropdownLabel: \"I have an Array, I would like to: \",\n  defaultCode: `let arr = [5, 1, 8];`,\n  options: Object.freeze({\n    \"add items or merge arrays\": {\n      dropdownLabel: \"I need to add:\",\n      options: [\n        {\n          name: \"splice\",\n          shortDesc: \"element/s to an array\",\n          desc: \"Adds and/or removes elements from an array.\",\n          example: `arr.splice(2, 0, 'tacos');<br>\n          console.log(arr);`,\n          output: `[5, 1, 'tacos', 8]`,\n        },\n        {\n          name: \"push\",\n          shortDesc: \"elements to the end of an array\",\n          desc:\n            \"Adds one or more elements to the end of an array and returns the new length of the array.\",\n          example: `arr.push(2);<br>\n          console.log(arr);`,\n          output: \"[5, 1, 8, 2]\",\n        },\n        {\n          name: \"unshift\",\n          shortDesc: \"elements to the front of an array\",\n          desc:\n            \"Adds one or more elements to the front of an array and returns the new length of the array.\",\n          example: `arr.unshift(2, 7);<br>\n          console.log(arr);`,\n          output: \"[2, 7, 5, 1, 8]\",\n        },\n        {\n          name: \"concat\",\n          shortDesc: \"this array to other array(s) and/or value(s)\",\n          desc:\n            \"Returns a new array comprised of this array joined with other array(s) and/or value(s).\",\n          example: `let arr2 = ['a', 'b', 'c'];<br>\n          let arr3 = arr.concat(arr2);<br>\n          console.log(arr3);`,\n          output: `[5, 1, 8, 'a', 'b', 'c']`,\n        },\n      ],\n    },\n    \"find one item\": {\n      dropdownLabel: \"I need to find:\",\n      options: [\n        {\n          name: \"includes\",\n          shortDesc: \"out if a certain element exists\",\n          desc:\n            \"Determines whether an array contains a certain element, returning true or false as appropriate.\",\n          example: `console.log(arr.includes(1));`,\n          output: `true`,\n        },\n        {\n          name: \"indexOf\",\n          shortDesc: \"the first index of a particular item\",\n          desc:\n            \"Returns the first index at which a given element can be found in the array, or -1 if it is not present.\",\n          example: `console.log(arr.indexOf(5));`,\n          output: `0`,\n        },\n        {\n          name: \"lastIndexOf\",\n          shortDesc: \"the last index of a particular item\",\n          desc:\n            \"Returns the last (greatest) index of an element within the array equal to the specified value, or -1 if none is found.\",\n          example: `console.log(arr.lastIndexOf(5));`,\n          output: `0`,\n        },\n        {\n          name: \"find\",\n          shortDesc: \"the first element that satisfies a condition\",\n          desc:\n            \"Returns the found value in the array, if an element in the array satisfies the provided testing function or undefined if not found. Similar to <code>findIndex()</code>, but it returns the item instead of the index.\",\n          example: `let isTiny = (el) => el < 2;<br>\n            console.log(arr.find(isTiny));`,\n          output: `1`,\n        },\n        {\n          name: \"findIndex\",\n          shortDesc: \"the first index of an item that satisfies a condition\",\n          desc:\n            \"Returns the index of the first element in the array that satisfies the provided testing function. Otherwise -1 is returned. Similar to <code>find()</code>, but it returns the index instead of the item.\",\n          example: `let isBig = (el) => el > 6;<br>\n            console.log(arr.findIndex(isBig));`,\n          output: `2`,\n        },\n        {\n          name: \"reduce\",\n          shortDesc: \"a value by reducing the Array, start to finish\",\n          desc:\n            \"Apply a function against an accumulator and each value of the array (from left-to-right) as to reduce it to a single value.\",\n          example: `let reducer = (a, b) => a + b;<br>\n            console.log(arr.reduce(reducer));`,\n          output: `14`,\n        },\n        {\n          name: \"reduceRight\",\n          shortDesc: \"a value by reducing the Array, finish to start\",\n          desc:\n            \"Apply a function against an accumulator and each value of the array (from right-to-left) as to reduce it to a single value.\",\n          example: `[arr, [0, 1]].reduceRight((a, b) => {<br>\n            <span>&nbsp;&nbsp;</span>return a.concat(b)<br>\n            }, [])`,\n          output: `[0, 1, 5, 1, 8]`,\n        },\n      ],\n    },\n    \"find one or more items\": {\n      dropdownLabel: \"I need to find:\",\n      options: [\n        {\n          name: \"filter\",\n          shortDesc: \"values based on a condition I create\",\n          desc:\n            \"Creates a new array with all of the elements of this array for which the provided filtering function returns true.\",\n          example: `let filtered = arr.filter(el => el > 4);<br>\n            console.log(filtered)`,\n          output: `[5, 8]`,\n        },\n        {\n          name: \"every\",\n          shortDesc: \"whether or not every item satisfies a condition\",\n          desc:\n            \"Returns true if every element in this array satisfies the provided testing function.\",\n          example: `let isSmall = (el) => el < 10;<br>\n            console.log(arr.every(isSmall));`,\n          output: `true`,\n        },\n        {\n          name: \"some\",\n          shortDesc: \"whether or not at least one item satisfies a condition\",\n          desc:\n            \"Returns true if at least one element in this array satisfies the provided testing function.\",\n          example: `let biggerThan4 = (el) => el > 4;<br>\n            console.log(arr.some(biggerThan4));`,\n          output: `true`,\n        },\n      ],\n    },\n    \"order the items (sorting)\": {\n      dropdownLabel: \"I need to:\",\n      options: [\n        {\n          name: \"reverse\",\n          shortDesc: \"reverse the order of the array\",\n          desc:\n            \"Reverses the order of the elements of an array in place — the first becomes the last, and the last becomes the first.\",\n          example: `arr.reverse();<br>\n          console.log(arr);`,\n          output: `[8, 1, 5]`,\n        },\n        {\n          name: \"sort\",\n          shortDesc: \"sort the items of the array\",\n          desc: `Sorts the elements of an array in place and returns the array.<br>\n          <br>\n          <strong>Important note:</strong> If compareFunction is not supplied, elements are sorted by converting them to strings and comparing strings in Unicode code point order. For example, \"Banana\" comes before \"cherry\". In a numeric sort, 9 comes before 80, but because numbers are converted to strings, \"80\" comes before \"9\" in Unicode order. The docs have more information to clarify.`,\n          example: `arr.sort();<br>\n          console.log(arr);`,\n          output: `[1, 5, 8]`,\n        },\n      ],\n    },\n    \"remove items\": {\n      dropdownLabel: \"I need to:\",\n      options: [\n        {\n          name: \"splice\",\n          shortDesc: \"element/s from an array\",\n          desc: \"Adds and/or removes elements from an array.\",\n          example: `arr.splice(2, 1);<br>\n          console.log(arr);`,\n          output: `[5, 1]`,\n        },\n        {\n          name: \"pop\",\n          shortDesc: \"the last element of the array\",\n          desc:\n            \"Removes the last element from an array and returns that element.\",\n          example: `arr.pop();<br>\n          console.log(arr);`,\n          output: `[5, 1]`,\n        },\n        {\n          name: \"shift\",\n          shortDesc: \"the first element of the array\",\n          desc:\n            \"Removes the first element from an array and returns that element.\",\n          example: `arr.shift();<br>\n          console.log(arr);`,\n          output: `[1, 8]`,\n        },\n        {\n          name: \"slice\",\n          shortDesc:\n            \"one or more elements in order for use, leaving the array as is\",\n          desc:\n            \"The <code>slice()</code> method returns a shallow copy of a portion of an array into a new array object. You can specify either just the beginning element (where end will default to the arrays length) or both the beginning and the end, comma-separated. The original array will not be modified.\",\n          example: `let slicedArr = arr.slice(1);<br>\n          console.log(arr);<br>\n          console.log(slicedArr);`,\n          output: `[5, 1, 8]<br>\n          [1, 8]`,\n        },\n      ],\n    },\n    \"return a string from array\": {\n      dropdownLabel: \"I need to:\",\n      options: [\n        {\n          name: \"join\",\n          shortDesc: \"join all elements of the array into a string\",\n          desc: `Joins all elements of an array into a string. You can join it together as is or with something in between, <code>elements.join(' -\n            ')</code> gives you <code>foo - bar</code>`,\n          example: `console.log(arr.join());`,\n          output: `\"5,1,8\"`,\n        },\n        {\n          name: \"toString\",\n          shortDesc: \"return a string representing the array.\",\n          desc: \"Returns a string representing the array and its elements.\",\n          example: `console.log(arr.toString());`,\n          output: `\"5,1,8\"`,\n        },\n        {\n          name: \"toLocaleString\",\n          shortDesc: \"return a localized string representing the array.\",\n          desc:\n            \"This one is a bit wacko. Returns a localized string representing the array and its elements. This is very useful for dates and currency and has some strange native abstractions, so best to consult the docs when using it\",\n          example: `let date = [new Date()];<br>\n          const arrString = arr.toLocaleString();<br>\n          const dateString = date.toLocaleString();<br>\n          console.log(arrString, dateString);`,\n          output: `\"5,1,8 12/26/2017, 6:54:49 PM\"`,\n        },\n      ],\n    },\n    \"walk (iterate) over items\": {\n      dropdownLabel: \"I need to iterate by:\",\n      options: [\n        {\n          name: \"forEach\",\n          shortDesc: \"executing a function I will create for each element\",\n          desc:\n            \"The forEach() method executes a provided function once for each array element.\",\n          example: `arr.forEach((element) => {<br>\n          <span>&nbsp;&nbsp;</span>console.log(element)<br>\n          });`,\n          output: `5<br>\n          1<br>\n          8`,\n        },\n        {\n          name: \"map\",\n          shortDesc:\n            \"creating a new array from each element with a function I create\",\n          desc:\n            \"Creates a new array with the results of calling a provided function on every element in this array.\",\n          example: `let map = arr.map(x => x + 1);<br>\n          console.log(map);`,\n          output: `[6, 2, 9]`,\n        },\n        {\n          name: \"entries\",\n          shortDesc: \"creating an iterator object\",\n          desc:\n            \"Returns a new Array Iterator object that contains the key/value pairs for each index in the array. There are a lot of uses for iterators, as well as other methods used with it in conjuction, like <code>values</code> and <code>keys</code>\",\n          example: `let iterator = arr.entries();<br>\n          console.log(iterator.next().value);`,\n          output: `[0, 5]<br>\n          <span class=\"comment\">// the 0 is the index,</span><br>\n          <span class=\"comment\">// the 5 is the first number</span>`,\n        },\n      ],\n    },\n    \"something else\": {\n      dropdownLabel: \"I need to:\",\n      options: [\n        {\n          name: \"length\",\n          shortDesc: \"find the length of the array\",\n          desc: \"Returns the number of elements in that array.\",\n          example: `console.log(arr.length);`,\n          output: `3`,\n        },\n        {\n          name: \"fill\",\n          shortDesc: \"fill all the elements of the array with a static value\",\n          desc:\n            \"Fills all the elements of an array from a start index to an end index with a static value.\",\n          example: `arr.fill(2);<br>\n          console.log(arr);`,\n          output: `[2, 2, 2]`,\n        },\n        {\n          name: \"copyWithin\",\n          shortDesc: \"copy a sequence of array elements within the array.\",\n          desc:\n            \"Copies a sequence of array elements within the array. You can specify either just the ending element (where begin will default to zero) or both the beginning and the end, comma-separated.\",\n          example: `arr.copyWithin(1);<br>\n          console.log(arr);`,\n          output: `[5, 5, 1]`,\n        },\n      ],\n    },\n  }),\n}\n\nconst Arrays = () => {\n  const [valueTopLevel, changeValueTopLevel] = useState()\n  const [valueSubLevel, changeValueSubLevel] = useState()\n\n  const change = (val) => {\n    changeValueSubLevel()\n    changeValueTopLevel(val)\n  }\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"h2\">Array Explorer</Typography>\n        <Typography variant=\"subtitle1\">\n          Find the array method you need without digging through the docs\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <label htmlFor={id}>\n          <Typography variant=\"body1\">{data.dropdownLabel}</Typography>\n        </label>\n      </Grid>\n      <Grid item xs={12}>\n        <AutoCompleteInput\n          id={id}\n          options={Object.entries(data.options)}\n          changeValue={change}\n        />\n      </Grid>\n      {valueTopLevel && valueTopLevel.length && (\n        <>\n          <Grid item xs={12}>\n            <label htmlFor={idSub}>\n              <Typography variant=\"body1\">\n                {valueTopLevel[1].dropdownLabel}\n              </Typography>\n            </label>\n          </Grid>\n          <Grid item xs={12}>\n            <AutoCompleteInput\n              id={idSub}\n              options={valueTopLevel[1].options}\n              changeValue={changeValueSubLevel}\n              label=\"shortDesc\"\n            />\n          </Grid>\n        </>\n      )}\n      {valueSubLevel && Object.keys(valueSubLevel).length && (\n        <DetailsCard\n          main=\"Array\"\n          url={`${baseUrl}${valueSubLevel.name}`}\n          data={valueSubLevel}\n          defaultCode={data.defaultCode}\n        />\n      )}\n    </Grid>\n  )\n}\n\nexport default Arrays\n","import React from 'react'\n\nconst Objects = () => (\n  <div>\n    Hi Object\n  </div>\n)\n\nexport default Objects\n","import React from 'react'\n\nconst Strings = () => (\n  <div>\n    Hi String\n  </div>\n)\n\nexport default Strings\n","import React from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\nimport { useSelector } from \"react-redux\"\nimport TabPanel from \"./TabPanel\"\nimport Arrays from \"../ds/Arrays\"\nimport Objects from \"../ds/Objects\"\nimport Strings from \"../ds/Strings\"\n\nconst DataStructuresTab = () => {\n  const { tabIndex } = useSelector((state) => state.ui)\n\n  return (\n    <Grid item md={12} lg={10}>\n      <TabPanel index={0} value={tabIndex}>\n        <Arrays />\n      </TabPanel>\n      <TabPanel index={1} value={tabIndex}>\n        <Objects />\n      </TabPanel>\n      <TabPanel index={2} value={tabIndex}>\n        <Strings />\n      </TabPanel>\n    </Grid>\n  )\n}\n\nexport default DataStructuresTab\n","import React from \"react\"\nimport Container from \"@material-ui/core/Container\"\nimport Grid from \"@material-ui/core/Grid\"\nimport { makeStyles } from \"@material-ui/core\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Fab from \"@material-ui/core/Fab\"\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\"\nimport NightsStayIcon from \"@material-ui/icons/NightsStay\"\nimport Slider from \"./Slider\"\nimport DataStructuresTab from \"./DataStructuresTab\"\nimport { changeDarkMode } from \"../../redux/UiReducer\"\nimport { useTheme } from \"@material-ui/core/styles\"\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    paddingTop: 10,\n    paddingBottom: 30,\n  },\n  fab: {\n    position: \"absolute\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    backgroundColor: \"#f50057\",\n    color: \"#fff\",\n  },\n}))\n\nconst Layout = () => {\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"))\n  const { prefersDarkMode } = useSelector((state) => state.ui)\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const changeColor = () => dispatch(changeDarkMode())\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Typography variant=\"h1\" className={matches && \"responsive-h1\"}>\n        <span>{matches ? \"JS\" : \"JavaScript\"}</span> Explorer\n      </Typography>\n      <Grid container my={4} className={classes.root}>\n        <Slider />\n        <DataStructuresTab />\n      </Grid>\n      <Fab\n        aria-label=\"theme-change\"\n        className={classes.fab}\n        onClick={() => changeColor()}\n      >\n        {prefersDarkMode ? <WbSunnyIcon /> : <NightsStayIcon />}\n      </Fab>\n    </Container>\n  )\n}\n\nexport default Layout\n","/* eslint-disable react/style-prop-object */\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport React, { useMemo } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\"\nimport Layout from './ui/Layout'\n\nconst App = () => {\n  const { prefersDarkMode } = useSelector((state) => state.ui)\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n        },\n      }),\n    [prefersDarkMode]\n  )\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Layout />\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${ process.env.PUBLIC_URL }/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://cra.link/PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://cra.link/PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { render } from 'react-dom'\nimport { Provider } from \"react-redux\"\nimport Store from \"./redux/Store\"\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport reportWebVitals from './reportWebVitals';\n\nrender(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorkerRegistration.register()\nreportWebVitals(console.log);\n"],"sourceRoot":""}